name: Auto-release on PR merge

on:
  # ATM, this is the closest trigger to a PR merging
  push:
    branches:
      - master

env:
  # Pin to v10.28.0, which (as of 2021-05-25) is the latest version with assets
  AUTO_VERSION: v10.37.6

jobs:
  release-check:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    outputs:
      auto-version: ${{ steps.auto-version.outputs.version }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          # A full checkout is required so that auto will have access to tag
          # information.
          fetch-depth: 0

      - name: Download auto
        run: |
          auto_download_url="$(curl -fsSL https://api.github.com/repos/intuit/auto/releases/tags/$AUTO_VERSION | jq -r '.assets[] | select(.name == "auto-linux.gz") | .browser_download_url')"
          wget -O- "$auto_download_url" | gunzip > ~/auto
          chmod a+x ~/auto

      - name: Check whether a release is due
        id: auto-version
        run: |
          version="$(~/auto version)"
          echo "::set-output name=version::$version"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: release-check
    if: needs.release-check.outputs.auto-version != ''
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: dandischema
          token: ${{ secrets.DANDI_GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install nobrainer-zoo
        run: python -m pip install .
        working-directory: nbz

      - name: Install build & twine
        run: python -m pip install build twine

      - name: Download auto
        run: |
          auto_download_url="$(curl -fsSL https://api.github.com/repos/intuit/auto/releases/tags/$AUTO_VERSION | jq -r '.assets[] | select(.name == "auto-linux.gz") | .browser_download_url')"
          wget -O- "$auto_download_url" | gunzip > ~/auto
          chmod a+x ~/auto

      - name: Create release
        run: |
          ~/auto shipit -vv
          python -m build
          twine upload dist/*
        env:
          GH_TOKEN: ${{ secrets.NEURONETS_GITHUB_TOKEN }}
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        working-directory: nbz

# vim:set sts=2:
